name: 'Go Actions Cache'
description: 'A GitHub Action to use a custom GOCACHEPROG'
inputs:
  version:
    description: 'The version of the Go Actions Cache to use'
    default: '0.0.1'
  github-token:
    description: 'GitHub token used to download the Go Actions Cache binary'
    required: true
    default: ${{ github.token }}

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
      if: inputs.version == '0'
    - shell: bash
      name: Download Go Actions Cache
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      run: |
        if command -v actions-cache-go &> /dev/null; then
          echo "actions-cache-go already installed"
          exit 0
        fi

        if [ "${{inputs.version }}" = "0" ]; then
          docker buildx build --output=_bin .
        else
          gh release download v${{ inputs.version }} --repo ${{ github.repository }} --pattern "go-actions-cache-$(uname -m).tar.gz"
          tar -xvf go-actions-cache-$(uname -m).tar.gz
          mkdir -p _bin
          mv go-actions-cache _bin/actions-cache-go
        fi
    - shell: bash
      name: 'Set Go Actions Cache Environment Variables'
      run: |
        echo "PATH=$(pwd)/_bin:$PATH" >> $GITHUB_ENV
        echo "GOCACHEPROG=actions-cache-go" >> $GITHUB_ENV
        if [ -z "${GOEXPERIMENT}" ]; then
          echo "GOEXPERIMENT=cacheprog" >> $GITHUB_ENV
        else
          echo "GOEXPERIMENT=cacheprog,${GOEXPERIMENT}" >> $GITHUB_ENV
        fi
        echo "GOEXPERIMENT=cacheprog,${GOEXPERIMENT}" >> $GITHUB_ENV
    - uses: crazy-max/ghaction-github-runtime@v3
      name: Expose github actions info for go-actions-cache